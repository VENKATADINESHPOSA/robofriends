{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzB,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAG,+BAA4BJ,EAA5B,iBAA+CK,IAAM,WAC7D,gCACC,6BAAKJ,IACL,4BAAIC,WCaOI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACC,cAAC,EAAD,CAEAV,GAAMO,EAAOG,GAAGV,GAChBC,KAAQM,EAAOG,GAAGT,KAClBC,MAASK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCKRW,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,qBAAKT,UAAY,MAAjB,SACC,uBACAA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCEAI,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,YC4CKC,G,wDA3Cd,aAAe,IAAD,8BACb,gBAiBDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAjBxC,EAAKC,MAAQ,CACZvB,OAAS,GACToB,YAAc,IAJF,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACL,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAQzB,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC/C,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAEjE,OAAiC,IAA7BH,KAAKP,MAAMvB,OAAOmC,OACd,oBAAIvC,UAAY,KAAhB,0BAIP,sBAAKA,UAAY,KAAjB,UACC,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,aAAgByB,KAAKb,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAU6B,a,GApCPO,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6f4e0f2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({ id, name, email }) => {\r\n\treturn (\r\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img src = {`https://robohash.org/${id}?size=200x200`} alt = 'robots' />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t    {\r\n\t\t    \trobots.map((user, i) =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey = {robots[i].id} \r\n\t\t\t\t\t\tid = {robots[i].id} \r\n\t\t\t\t\t\tname = {robots[i].name} \r\n\t\t\t\t\t\temail = {robots[i].email}\r\n\t\t\t\t\t\t/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t    } \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn(\r\n\t\t<div className = 'pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype = 'search' \r\n\t\t\tplaceholder = 'search robots'\r\n\t\t\tonChange = {searchChange} \r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style = {{overflowY: 'scroll', border:'5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots : [],\r\n\t\t\tsearchfield : ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(users => {\r\n\t\t\t\tthis.setState({robots:users})\r\n\t\t\t})\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield:event.target.value})\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t})\r\n\t\tif (this.state.robots.length === 0) {\r\n\t\t\treturn <h1 className = 'tc'>Page Loading</h1>\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn(\r\n\t\t\t<div className = 'tc'>\r\n\t\t\t\t<h1 className = 'f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots = {filteredRobots} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\t\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}